package com.DMAT.microservice.mainservice.controller;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import com.DMAT.microservice.mainservice.modal.Answer;
import com.DMAT.microservice.mainservice.modal.Question;
import com.DMAT.microservice.mainservice.modal.QuestionAnswer;
import com.DMAT.microservice.mainservice.modal.QuestionArray;


@RestController
@RequestMapping("/questionCatalog")
public class MainController {
	
	@Autowired
    private RestTemplate restTemplate;
	
	@RequestMapping("/")
	public List<QuestionAnswer> getAllQuestions(){
QuestionArray questionArray=restTemplate.getForObject("http://localhost:2222/question/", QuestionArray.class);
		
		List<Question> questionList=questionArray.getQuesList();
		
		return questionList.stream().map(question -> {
			//calling movie-info microService
			Answer answer= restTemplate.getForObject("http://localhost:3333/answer/"+question.getQid(),Answer.class);
			QuestionAnswer qa=new QuestionAnswer();
			qa.setQid(question.getQid());
			qa.setQuestion(question.getQuestion());
			qa.setSectionId(question.getSectionId());
			qa.setOptionA(answer.getOptionA());qa.setOptionB(answer.getOptionB());
			qa.setOptionC(answer.getOptionC());qa.setOptionD(answer.getOptionD());
			qa.setCorrectAnswer(answer.getCorrectAnswer());
			return qa;
		}).collect(Collectors.toList());

	}
	
	@RequestMapping("/{sectionId}")
	public List<QuestionAnswer> getQuestionsSectionWise(@PathVariable int sectionId){
		
		QuestionArray questionArray=restTemplate.getForObject("http://localhost:2222/question/section/"+sectionId, QuestionArray.class);
		
		List<Question> questionList=questionArray.getQuesList();
		
		return questionList.stream().map(question -> {
			//calling movie-info microService
			Answer answer= restTemplate.getForObject("http://localhost:3333/answer/"+question.getQid(),Answer.class);
			QuestionAnswer qa=new QuestionAnswer();
			qa.setQid(question.getQid());
			qa.setQuestion(question.getQuestion());
			qa.setSectionId(question.getSectionId());
			qa.setOptionA(answer.getOptionA());qa.setOptionB(answer.getOptionB());
			qa.setOptionC(answer.getOptionC());qa.setOptionD(answer.getOptionD());
			qa.setCorrectAnswer(answer.getCorrectAnswer());
			return qa;
		}).collect(Collectors.toList());

	}
	
	
}
